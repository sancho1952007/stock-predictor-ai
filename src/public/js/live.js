!function () { var e = { Etag: 1, "Last-Modified": 1, "Content-Length": 1, "Content-Type": 1 }, t = {}, a = {}, s = {}, o = {}, r = !1, n = { html: 1, css: 1, js: 1 }, i = { heartbeat: function () { document.body && (r || i.loadresources(), i.checkForChanges()), setTimeout(i.heartbeat, 1e3) }, loadresources: function () { function e(e) { var t = document.location, a = RegExp("^\\.|^/(?!/)|^[\\w]((?!://).)*$|" + t.protocol + "//" + t.host); return e.match(a) } for (var a = document.getElementsByTagName("script"), o = document.getElementsByTagName("link"), l = [], c = 0; c < a.length; c++) { var d = a[c].getAttribute("src"); if (d && e(d) && l.push(d), d && d.match(/\blive.js#/)) { for (var h in n) n[h] = null != d.match("[#,|]" + h); d.match("notify") && alert("Live.js is loaded.") } } n.js || (l = []), n.html && l.push(document.location.href); for (var c = 0; c < o.length && n.css; c++) { var p = o[c], f = p.getAttribute("rel"), v = p.getAttribute("href", 2); v && f && f.match(/stylesheet/i) && e(v) && (l.push(v), s[v] = p) } for (var c = 0; c < l.length; c++) { var u = l[c]; i.getHead(u, function (e, a) { t[e] = a }) } var g = document.getElementsByTagName("head")[0], m = document.createElement("style"), y = "transition: all .3s ease-out;"; css = [".livejs-loading * { ", y, " -webkit-", y, "-moz-", y, "-o-", y, "}"].join(""), m.setAttribute("type", "text/css"), g.appendChild(m), m.styleSheet ? m.styleSheet.cssText = css : m.appendChild(document.createTextNode(css)), r = !0 }, checkForChanges: function () { for (var e in t) a[e] || i.getHead(e, function (e, a) { var s = t[e], o = !1; for (var r in t[e] = a, s) { var n = s[r], l = a[r], c = a["Content-Type"]; switch (r.toLowerCase()) { case "etag": if (!l) break; default: o = n != l }if (o) { i.refreshResource(e, c); break } } }) }, refreshResource: function (e, t) { switch (t.toLowerCase()) { case "text/css": var a = s[e], r = document.body.parentNode, n = a.parentNode, l = a.nextSibling, c = document.createElement("link"); r.className = r.className.replace(/\s*livejs\-loading/gi, "") + " livejs-loading", c.setAttribute("type", "text/css"), c.setAttribute("rel", "stylesheet"), c.setAttribute("href", e + "?now=" + new Date * 1), l ? n.insertBefore(c, l) : n.appendChild(c), s[e] = c, o[e] = a, i.removeoldLinkElements(); break; case "text/html": if (e != document.location.href) return; case "text/javascript": case "application/javascript": case "application/x-javascript": document.location.reload() } }, removeoldLinkElements: function () { var e = 0; for (var t in o) { try { var a = s[t], r = o[t], n = document.body.parentNode, l = a.sheet || a.styleSheet; (l.rules || l.cssRules).length >= 0 && (r.parentNode.removeChild(r), delete o[t], setTimeout(function () { n.className = n.className.replace(/\s*livejs\-loading/gi, "") }, 100)) } catch (c) { e++ } e && setTimeout(i.removeoldLinkElements, 50) } }, getHead: function (t, s) { a[t] = !0; var o = window.XMLHttpRequest ? new XMLHttpRequest : new ActiveXObject("Microsoft.XmlHttp"); o.open("GET", t, !0), o.onreadystatechange = function () { if (delete a[t], 4 == o.readyState && 304 != o.status) { o.getAllResponseHeaders(); var r = {}; for (var n in e) { var i = o.getResponseHeader(n); "etag" == n.toLowerCase() && i && (i = i.replace(/^W\//, "")), "content-type" == n.toLowerCase() && i && (i = i.replace(/^(.*?);.*?$/i, "$1")), r[n] = i } s(t, r) } }, o.send() } }; "file:" != document.location.protocol ? (window.liveJsLoaded || i.heartbeat(), window.liveJsLoaded = !0) : window.console && console.log("Live.js doesn't support the file protocol. It needs http.") }();